<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>d=====(￣▽￣*)b</title>
      <link href="/2019/09/14/d-%EF%BF%A3%E2%96%BD%EF%BF%A3-b/"/>
      <url>/2019/09/14/d-%EF%BF%A3%E2%96%BD%EF%BF%A3-b/</url>
      
        <content type="html"><![CDATA[<p>emmmm我总算找回了博客部分原始数据…</p><p>把以前不理智写的东西改了改，又发现<strong>xaoxuu大大</strong>的博客主题挺不错，就顺便借用了哈哈哈</p><p>以后还是要多敲敲键盘，写写博客，生活不能停下记录嘛</p><p>心向远方，世界和平<a id="more"></a></p>]]></content>
      
      
      <categories>
          
          <category> 随记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>再见</title>
      <link href="/2019/06/08/%E5%86%8D%E8%A7%81/"/>
      <url>/2019/06/08/%E5%86%8D%E8%A7%81/</url>
      
        <content type="html"><![CDATA[<p>谨以此告别过去。</p><p>4.3 ⇢ 6.8 66天过去。</p><p>相识的时候戏称“王与后”，现在回忆“往与后”。</p><p>其实，不后悔认识你，遗憾过了几天才开始喜欢你的。</p><p>我，不觉得你说现在可能没有喜欢的感觉这句话有不妥，抱歉在有情绪需求的时候没满足你还惹你。</p><p>自然我是用心的，比以前都要用心，所以同时抱歉过往没有给予爱过的人该有的响应。</p><p>现在我们之间的关系就剩一张纸的厚度了大概？</p><p>挽留，像挽留不到吧，那便期待明天在火车站能见到你，当面说句：对不起。仅此而已。</p><p>我想，得好聚好散吧。</p><p>博客本来只打算记点学习经验，后来想用以记载在一起的美好，现在，用于纪念过去，憧憬未来吧。</p><p>或许如歌词</p><p>太嫉妒时光，能离开的大方。</p><p>你好，过往，爱我的可可，我爱的可可；你好，后来，我认识的杨同学，或许不属我的杨同学。</p><p>谢了，让我成长。</p><p>期待后来的我们，都能更好。相识有缘。生活愉快。</p>]]></content>
      
      
      <categories>
          
          <category> 随记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>端午</title>
      <link href="/2019/06/07/%E7%AB%AF%E5%8D%88/"/>
      <url>/2019/06/07/%E7%AB%AF%E5%8D%88/</url>
      
        <content type="html"><![CDATA[<p>假日不期而至，三点四十的火车，两点半，差一点就寻不到她。</p><p>地铁站，人流涌动，差一点送不了她。</p><p>客站，人往里走着，见不着以后再离开。</p><p>然后呢，回寝，便听着她说一些之前没说出来的或实或虚的话。</p><p>大概要怎么做是明白了，我说了许多。</p><p>现在，不去想但在想。</p><p>结局如何？未知，茫然。</p><p>也罢，好聚好散，人还在，日子也还是要过，梦也在，心态也还是要在。</p>]]></content>
      
      
      <categories>
          
          <category> 随记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随谈</title>
      <link href="/2019/03/28/%E9%9A%8F%E8%B0%88/"/>
      <url>/2019/03/28/%E9%9A%8F%E8%B0%88/</url>
      
        <content type="html"><![CDATA[<p><a id="more"></a>近日还算平和，忙里有点闲，闲又有点忙的感觉也还不错。</p><p>认识新的美好，挥手相别部分过去，哈哈哈，这一年不能荒度了。</p><p>这学期也试着早起了呢，虽然是依赖一个本来睡得跟死猪一样的室友叫起来的。去年那样将过且过的状态可不能多，毕竟该和优秀接着做朋友才是。</p><p>灯欲熄，人将寝，此夜，愿安。</p>]]></content>
      
      
      <categories>
          
          <category> 随记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>略记</title>
      <link href="/2019/01/26/%E7%95%A5%E8%AE%B0/"/>
      <url>/2019/01/26/%E7%95%A5%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>又是一天过去<a id="more"></a></p><p>早</p><p>天像是很不争气地流着眼泪啊，</p><p>倒是让绵阳的气温又低了不少。可却又还是能接受。</p><p>回到最初的起点，一位小姐说想再年轻回来，我说笑到你本很年轻，其实暗知她想说，我都要过四十的一半了，那便是快奔三了。是这样的，从过去走来，虽然是花样年华，其实心已不再那样年轻。</p><p>那便再年轻一个晚上，矫揉造作地写一番吧。</p><p>过去的美好仍旧是忘怀不了的，南山一息一里这样讲述的。</p><p>亭依旧还是那样的，但现在才觉得还挺美。意境不错，不禁直接用了这张图，那位仙儿应该是不介意我窃走一点美好吧？<br><img src="pavilion.jpeg" alt><br>操场润湿着，集训的孩子一如既往地训着。<br><img src="playground.jpeg" alt><br>夜里，此处宁静，孩子们藏住白日里的激动，伏案深学，倒是让人欣慰的。而我们呢，便悄悄地离开。可还是不想太简单，总是要有点私心吧，所以还是多留张灯下形影，好去记录不错的一天，籍我们去念怀。</p><p>安好，此夜。</p>]]></content>
      
      
      <categories>
          
          <category> 随记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二十五日夜记</title>
      <link href="/2019/01/25/%E4%BA%8C%E5%8D%81%E4%BA%94%E6%97%A5%E5%A4%9C%E8%AE%B0/"/>
      <url>/2019/01/25/%E4%BA%8C%E5%8D%81%E4%BA%94%E6%97%A5%E5%A4%9C%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<p>又随便写写。<a id="more"></a></p><p>终于，明日便回到南山看一看了。前几日还很平静，可现在却感激动与紧张，这个中原因我是不确定的，也懒得去定。</p><p>希望母校行一切顺利。</p><p>妈又在催我吃饭，啊，总该做完电脑前的事才能撒手吧？</p><p>不过呢，还有让心静不下来的原因我是知晓的，便是姐她们安排的微信排版作业还没完成。怎么办呢？只能接下来花时间好好对待。毕竟已经拖了很久，再拖是过意不去的。即使姐姐给予理解，我知道的，她内心也是不高兴的。我是不愿让她不喜让她难过的。</p><p>那么，今夜就这样写写吧。再整理记录一番，洗漱完便睡去。</p>]]></content>
      
      
      <categories>
          
          <category> 随记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简易个人Blog搭建过程回顾</title>
      <link href="/2019/01/12/%E7%AE%80%E6%98%93%E4%B8%AA%E4%BA%BABlog%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B%E5%9B%9E%E9%A1%BE/"/>
      <url>/2019/01/12/%E7%AE%80%E6%98%93%E4%B8%AA%E4%BA%BABlog%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B%E5%9B%9E%E9%A1%BE/</url>
      
        <content type="html"><![CDATA[<p>试了各种玩意以后忙活了七个月结果最后还是投入了Hexo怀抱的博客总算是实现了大致预期效果～便总结一些博客站点搭建的要点供自己和朋友方便。这一篇Blog将简要总结结合HEXO在github/gitee上搭建简易的静态站点。<a id="more"></a></p><h1 id="简易搭建实行要求"><a href="#简易搭建实行要求" class="headerlink" title="简易搭建实行要求"></a>简易搭建实行要求</h1><p><strong>推荐</strong></p><ul><li>在Linux上操作</li><li>有一定的前端基础</li><li>有电脑基础就行了</li><li>英语水平要好，便于查找及解决问题，以及自行微调</li></ul><p>本文参考环境基于Deepin</p><h2 id="1-什么是hexo"><a href="#1-什么是hexo" class="headerlink" title="1.什么是hexo"></a>1.什么是hexo</h2><p>Hexo是一个博客框架，用来生成静态网页。</p><h2 id="2-安装git"><a href="#2-安装git" class="headerlink" title="2.安装git"></a>2.安装git</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install git-core</span><br></pre></td></tr></table></figure><h2 id="3-安装Node-js"><a href="#3-安装Node-js" class="headerlink" title="3.安装Node.js"></a>3.安装Node.js</h2><p>安装nvm（用来安装Node.js）<br>安装依赖包<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line">$ sudo apt-get install build-essential libssl-dev</span><br></pre></td></tr></table></figure></p><p><strong>两种方式安装node.js</strong></p><h3 id="1-根据curl"><a href="#1-根据curl" class="headerlink" title="1.根据curl"></a>1.根据curl</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.4/install.sh | bash</span><br></pre></td></tr></table></figure><h3 id="2-根据wget"><a href="#2-根据wget" class="headerlink" title="2.根据wget"></a>2.根据wget</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget -qO- https://raw.githubusercontent.com/creationix/nvm/v0.31.4/install.sh | bash</span><br></pre></td></tr></table></figure><p><strong>注</strong>：使用<code>nvm --help</code>查看是否安装成功<br>重启终端执行以下命令<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ nvm install stable</span><br></pre></td></tr></table></figure></p><h2 id="4-安装Hexo"><a href="#4-安装Hexo" class="headerlink" title="4.安装Hexo"></a>4.安装Hexo</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g hexo-cli</span><br></pre></td></tr></table></figure><h3 id="a-建站"><a href="#a-建站" class="headerlink" title="a.建站"></a>a.建站</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &lt;folder&gt;</span><br><span class="line">$ <span class="built_in">cd</span> &lt;folder&gt;</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure><p><strong>注</strong>：folder是你建的文件夹名，可任意取名，默认是hexo</p><p><code>npm install</code>有如下几种：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install moduleName <span class="comment"># 安装模块到项目目录下</span></span><br><span class="line">npm install -g moduleName <span class="comment"># -g 的意思是将模块安装到全局，具体安装到磁盘哪个位置，要看 npm config prefix 的位置。</span></span><br><span class="line">npm install --save moduleName <span class="comment"># --save 的意思是将模块安装到项目目录下，并在package文件的dependencies节点写入依赖。</span></span><br><span class="line">npm install --save-dev moduleName <span class="comment"># --save-dev 的意思是将模块安装到项目目录下，并在package文件的devDependencies节点写入依赖。</span></span><br></pre></td></tr></table></figure><p>这几种安装方法要视具体情况而定(<del>这里把我坑了很多次</del>)：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install X:</span><br></pre></td></tr></table></figure><p>会把X包安装到项目的node_modules目录中<br>会修改package.json的dependencies<br>之后运行<code>npm install</code>命令时，不会自动安装X</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g X:</span><br></pre></td></tr></table></figure><p>安装模块到全局，不会在项目node_modules目录中保存模块包。<br>不会将模块依赖写入devDependencies或dependencies 节点。<br>运行<code>npm install</code>初始化项目时不会下载模块。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install X ––save:</span><br></pre></td></tr></table></figure><p>会把X包安装到node_modules目录中<br>会在package.json的dependencies属性下添加X<br>之后运行<code>npm install</code>命令时，会自动安装X到node_modules目录中<br>之后运行<code>npm install ––production</code>或者注明NODE_ENV变量值为production时，==会==自动安装msbuild到node_modules目录中,即是在线上环境运行时会将包安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install X ––save-dev:</span><br></pre></td></tr></table></figure><p>会把X包安装到node_modules目录中<br>会在package.json的devDependencies属性下添加X<br>之后运行<code>npm install</code>命令时，会自动安装X到node_modules目录中<br>之后运行<code>npm install ––production</code>或者注明NODE_ENV变量值为production时，==不会== 自动安装X到node_modules目录中，即是在线上环境并不会进行安装。</p><p><strong>使用原则:</strong></p><p>devDependencies 节点下的模块是在开发时需要用的，如项目中使用的 gulp ，压缩css、js的模块。这些模块在项目部署后是不需要的，所以我们可以使用<code>--save-dev</code>的形式安装。像 express 这些模块是项目运行必备的，应该安装在 dependencies 节点下，所以我们应该使用<code>--save</code>的形式安装。</p><p><strong><em>总结为一句话</em></strong>：运行时需要用到的包使用<code>––save</code>，否则使用<code>––save-dev</code>。</p><h3 id="b-生成静态页面"><a href="#b-生成静态页面" class="headerlink" title="b.生成静态页面"></a>b.生成静态页面</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><h3 id="c-启动本地服务器"><a href="#c-启动本地服务器" class="headerlink" title="c.启动本地服务器"></a>c.启动本地服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s</span><br></pre></td></tr></table></figure><p>注：hexo命令是在你建立的博客文件目录下执行，这时候就可以用浏览器打开网址:<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 来进行预览了。</p><h2 id="5-配置SSH"><a href="#5-配置SSH" class="headerlink" title="5.配置SSH"></a>5.配置SSH</h2><p><strong>已配置好的直接跳过</strong></p><h3 id="注册GitHub账号"><a href="#注册GitHub账号" class="headerlink" title="注册GitHub账号"></a>注册GitHub账号</h3><p>新建一个repositories，格外注意：repositories名字必须为用户名.github.io</p><h3 id="设置Git的user-name和email：-如果是第一次的话"><a href="#设置Git的user-name和email：-如果是第一次的话" class="headerlink" title="设置Git的user name和email：(如果是第一次的话)"></a>设置Git的user name和email：(如果是第一次的话)</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">"github用户名"</span></span><br><span class="line">git config --global user.email <span class="string">"你注册的邮箱地址"</span></span><br></pre></td></tr></table></figure><p>执行下面命令生成SSH<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"root@linuxidc.net"</span></span><br></pre></td></tr></table></figure></p><p><strong>注</strong>：三次回车之后，可以生成id_rsa.pub文件，这里面就是SSH key的内容，然后使用vim编辑器打开这个文件<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure></p><p>也可直接用文本编辑器打开，把里面的内容都拷贝下来，打开github，点击右上角自己的头像，点击settings，再点击SSH，之后添加new ssh key，最后把复制的信息都粘贴进去，title随便写，最后输入以下命令判断SSH是否配置好：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></p><p>如出现<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hi! You’ve successfully authenticated, but GitHubdoes not provide shell access.</span><br></pre></td></tr></table></figure></p><p>表示已经配置好SSH</p><h2 id="6-配置-Git-个人信息"><a href="#6-配置-Git-个人信息" class="headerlink" title="6.配置 Git 个人信息"></a>6.配置 Git 个人信息</h2><p><strong>已配置好的直接跳过</strong></p><h3 id="配置Deployment"><a href="#配置Deployment" class="headerlink" title="配置Deployment"></a>配置Deployment</h3><p>在_config.yml文件中，找到Deployment，然后按照如下修改：<br><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">repo:</span> <span class="string">git@github.com:用户名/用户名.github.io.git</span></span><br><span class="line"><span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure></p><p>最后执行以下命令：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></p><p>输入https://“用户名”.github.io就可以访问你的博客了。</p><h2 id="7-更换主题"><a href="#7-更换主题" class="headerlink" title="7.更换主题"></a>7.更换主题</h2><p>这里示例更换<strong>next</strong>主题<br>注意有些主题的部分板块内容有不同的cc许可，请看清后再编改（我这里一开始就不小心直接进行演绎冒犯了一位大大，再次抱歉）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> your-hexo-site</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure></p><p>启用主题，与所有Hexo主题启用的模式一样。当克隆完成后，打开站点配置文件_config.yml，找到theme字段，并将其值更改为next。</p><h3 id="启用next主题"><a href="#启用next主题" class="headerlink" title="启用next主题"></a>启用next主题</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">next</span></span><br></pre></td></tr></table></figure><p>到此，next主题安装完成。下一步将验证主题是否正确启用。在切换主题之后、验证之前，最好使用hexo clean来清除Hexo的缓存。<br>更详细的请点击参看next的官方文档</p><h2 id="附加：绑定域名"><a href="#附加：绑定域名" class="headerlink" title="附加：绑定域名"></a>附加：绑定域名</h2><p>适用于：</p><ul><li>较宽裕</li><li>想独立有个性</li></ul><h3 id="1）获取github的IP"><a href="#1）获取github的IP" class="headerlink" title="1）获取github的IP"></a>1）获取github的IP</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping www.用户名.github.io</span><br></pre></td></tr></table></figure><h3 id="2）购买域名（以阿里云为例）"><a href="#2）购买域名（以阿里云为例）" class="headerlink" title="2）购买域名（以阿里云为例）"></a>2）购买域名（以阿里云为例）</h3><p>进入控制台，点击域名后的解析，添加解析</p><h3 id="3）GitHub解析"><a href="#3）GitHub解析" class="headerlink" title="3）GitHub解析"></a>3）GitHub解析</h3><p>在Github的xxx.github.io项目,进入【Settings】标签页,在【Custom domain】功能中,将刚刚申请的域名写进去。</p><p>下面这是关于Hexo博客搭建工具的快速入门操作。请君自鉴。更多请看此文档。如果在使用Hexo时有任何问题，你可以在troubleshooting提问或在GitHub询问<a href="https://hexo.io" target="_blank" rel="noopener">Hexo</a>项目的大大。</p><h1 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h1><p>（应该都能看懂吧）</p><h2 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><h2 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><h2 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><h2 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Dev </category>
          
          <category> 网络 </category>
          
          <category> 网站 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World---致基本完善站点后的第一天👏👏</title>
      <link href="/2019/01/09/hello-world/"/>
      <url>/2019/01/09/hello-world/</url>
      
        <content type="html"><![CDATA[<p>不记得已经荒了多少天💭？总算是了结一桩心事。总归是好事。大半年的时间，从高考前到高考后，经历的也挺多呢，无关好坏，倒是充实了生活。</p><p>辗转千百，总算是把Blog弄得差不多了。</p><p>愿明日明媚，晚安。</p><hr><p><strong>如果你也想有一个简单的博客主页,下一篇会总结一些基本的操作。</strong></p><hr><p>然后emmmm，我居然智障地把本地的文件<strong>完完全全地！删了！</strong>现在一点一点尽力把记录的点滴都恢复回来。。。<del><strong>心疼自己</strong></del></p>]]></content>
      
      
      <categories>
          
          <category> 随记 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
